// ------------------------------------------------------------------------
// ========================================================================
// THIS CODE AND INFORMATION ARE GENERATED BY AUTOMATIC CODE GENERATOR
// ========================================================================
// Template:   ViewModel.tt
using System;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Windows;
using System.Windows.Input;
using Controls=WPAppStudio.Controls;
using Entities=WPAppStudio.Entities;
using EntitiesBase=WPAppStudio.Entities.Base;
using IServices=WPAppStudio.Services.Interfaces;
using IViewModels=WPAppStudio.ViewModel.Interfaces;
using Localization=WPAppStudio.Localization;
using Repositories=WPAppStudio.Repositories;
using Services=WPAppStudio.Services;
using ViewModelsBase=WPAppStudio.ViewModel.Base;
using WPAppStudio;
using WPAppStudio.Shared;

namespace WPAppStudio.ViewModel
{
    /// <summary>
    /// Implementation of WhoWeAre_Tutorial ViewModel.
    /// </summary>
    [CompilerGenerated]
    [GeneratedCode("Radarc", "4.0")]
    public partial class WhoWeAre_TutorialViewModel : ViewModelsBase.VMBase, IViewModels.IWhoWeAre_TutorialViewModel
    {       

		private readonly IServices.IDialogService _dialogService;
		private readonly IServices.INavigationService _navigationService;
		private readonly IServices.ILockScreenService _lockScreenService;
		private readonly Repositories.IWhoWeAre_WhoWeAreCollection _whoWeAre_WhoWeAreCollection;
		private readonly Repositories.IPhotoAlbum_PhotoAlbumCollection _photoAlbum_PhotoAlbumCollection;
		private readonly Repositories.Imoments_momentsCollection _moments_momentsCollection;
		private readonly IServices.IInternetService _internetService;
		
        /// <summary>
        /// Initializes a new instance of the <see cref="WhoWeAre_TutorialViewModel" /> class.
        /// </summary>
        /// <param name="dialogService">The Dialog Service.</param>
        /// <param name="navigationService">The Navigation Service.</param>
        /// <param name="lockScreenService">The Lock Screen Service.</param>
        /// <param name="whoWeAre_WhoWeAreCollection">The Who We Are_ Who We Are Collection.</param>
        /// <param name="photoAlbum_PhotoAlbumCollection">The Photo Album_ Photo Album Collection.</param>
        /// <param name="moments_momentsCollection">The Moments_moments Collection.</param>
        /// <param name="internetService">The Internet Service.</param>
        public WhoWeAre_TutorialViewModel(IServices.IDialogService dialogService, IServices.INavigationService navigationService, IServices.ILockScreenService lockScreenService, Repositories.IWhoWeAre_WhoWeAreCollection whoWeAre_WhoWeAreCollection, Repositories.IPhotoAlbum_PhotoAlbumCollection photoAlbum_PhotoAlbumCollection, Repositories.Imoments_momentsCollection moments_momentsCollection, IServices.IInternetService internetService)
        {
			_dialogService = dialogService;
			_navigationService = navigationService;
			_lockScreenService = lockScreenService;
			_whoWeAre_WhoWeAreCollection = whoWeAre_WhoWeAreCollection;
			_photoAlbum_PhotoAlbumCollection = photoAlbum_PhotoAlbumCollection;
			_moments_momentsCollection = moments_momentsCollection;
			_internetService = internetService;
        }
		
	    /// <summary>
        /// IsInternetAvalaible property.
        /// </summary>		
        public Visibility IsInternetAvalaible
        {
	      get
          {
				return _internetService.IsNetworkAvailable() ? Visibility.Collapsed : Visibility.Visible; 
           }
		}
	
		private ObservableCollection<Entities.WhoWeAreSchema> _whoWeAre_TutorialListControlCollection;

        /// <summary>
        /// WhoWeAre_TutorialListControlCollection property.
        /// </summary>		
        public ObservableCollection<Entities.WhoWeAreSchema> WhoWeAre_TutorialListControlCollection
        {
            get
            {
				
                if(_whoWeAre_TutorialListControlCollection == null)
					GetWhoWeAre_TutorialListControlCollectionData();
				return _whoWeAre_TutorialListControlCollection;     
            }
            set
            {
                SetProperty(ref _whoWeAre_TutorialListControlCollection, value);
            }
        }
	
		private int _whoWeAre_TutorialListControlCollectionPageNumber;

        /// <summary>
        /// WhoWeAre_TutorialListControlCollectionPageNumber property.
        /// </summary>		
        public int WhoWeAre_TutorialListControlCollectionPageNumber
        {
            get
            {
				return _whoWeAre_TutorialListControlCollectionPageNumber;
            }
            set
            {
                SetProperty(ref _whoWeAre_TutorialListControlCollectionPageNumber, value);
            }
        }
	
		private Entities.WhoWeAreSchema _selectedWhoWeAre_TutorialListControlCollection;

        /// <summary>
        /// SelectedWhoWeAre_TutorialListControlCollection property.
        /// </summary>		
        public Entities.WhoWeAreSchema SelectedWhoWeAre_TutorialListControlCollection
        {
            get
            {
				return _selectedWhoWeAre_TutorialListControlCollection;
            }
            set
            {
                _selectedWhoWeAre_TutorialListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.IWhoWeAre_DetailViewModel>(_selectedWhoWeAre_TutorialListControlCollection);
            }
        }
	
		private ObservableCollection<Entities.PhotoAlbumCollectionSchema> _photoAlbum_TutorialPhotosListControlCollection;

        /// <summary>
        /// PhotoAlbum_TutorialPhotosListControlCollection property.
        /// </summary>		
        public ObservableCollection<Entities.PhotoAlbumCollectionSchema> PhotoAlbum_TutorialPhotosListControlCollection
        {
            get
            {
				
                if(_photoAlbum_TutorialPhotosListControlCollection == null)
					GetPhotoAlbum_TutorialPhotosListControlCollectionData();
				return _photoAlbum_TutorialPhotosListControlCollection;     
            }
            set
            {
                SetProperty(ref _photoAlbum_TutorialPhotosListControlCollection, value);
            }
        }
	
		private int _photoAlbum_TutorialPhotosListControlCollectionPageNumber;

        /// <summary>
        /// PhotoAlbum_TutorialPhotosListControlCollectionPageNumber property.
        /// </summary>		
        public int PhotoAlbum_TutorialPhotosListControlCollectionPageNumber
        {
            get
            {
				return _photoAlbum_TutorialPhotosListControlCollectionPageNumber;
            }
            set
            {
                SetProperty(ref _photoAlbum_TutorialPhotosListControlCollectionPageNumber, value);
            }
        }
	
		private Entities.PhotoAlbumCollectionSchema _selectedPhotoAlbum_TutorialPhotosListControlCollection;

        /// <summary>
        /// SelectedPhotoAlbum_TutorialPhotosListControlCollection property.
        /// </summary>		
        public Entities.PhotoAlbumCollectionSchema SelectedPhotoAlbum_TutorialPhotosListControlCollection
        {
            get
            {
				return _selectedPhotoAlbum_TutorialPhotosListControlCollection;
            }
            set
            {
                _selectedPhotoAlbum_TutorialPhotosListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.IPhotoAlbum_DetailViewModel>(_selectedPhotoAlbum_TutorialPhotosListControlCollection);
            }
        }
	
		private ObservableCollection<Entities.momentsSchema> _moments_AuthorListControlCollection;

        /// <summary>
        /// Moments_AuthorListControlCollection property.
        /// </summary>		
        public ObservableCollection<Entities.momentsSchema> Moments_AuthorListControlCollection
        {
            get
            {
				
                if(_moments_AuthorListControlCollection == null)
					Getmoments_AuthorListControlCollectionData();
				return _moments_AuthorListControlCollection;     
            }
            set
            {
                SetProperty(ref _moments_AuthorListControlCollection, value);
            }
        }
	
		private int _moments_AuthorListControlCollectionPageNumber;

        /// <summary>
        /// Moments_AuthorListControlCollectionPageNumber property.
        /// </summary>		
        public int Moments_AuthorListControlCollectionPageNumber
        {
            get
            {
				return _moments_AuthorListControlCollectionPageNumber;
            }
            set
            {
                SetProperty(ref _moments_AuthorListControlCollectionPageNumber, value);
            }
        }
	
		private Entities.momentsSchema _selectedmoments_AuthorListControlCollection;

        /// <summary>
        /// Selectedmoments_AuthorListControlCollection property.
        /// </summary>		
        public Entities.momentsSchema Selectedmoments_AuthorListControlCollection
        {
            get
            {
				return _selectedmoments_AuthorListControlCollection;
            }
            set
            {
                _selectedmoments_AuthorListControlCollection = value;
                if (value != null)
                    _navigationService.NavigateTo<IViewModels.Imoments_DetailViewModel>(_selectedmoments_AuthorListControlCollection);
            }
        }

        /// <summary>
        /// Delegate method for the RefreshWhoWeAre_TutorialListControlCollectionCommand command.
        /// </summary>
        public async void RefreshWhoWeAre_TutorialListControlCollectionCommandDelegate() 
        {
			try
			{
				LoadingWhoWeAre_TutorialListControlCollection = true;
				var items = await  _whoWeAre_WhoWeAreCollection.Refresh();
				WhoWeAre_TutorialListControlCollection = items;
				WhoWeAre_TutorialListControlCollectionPageNumber = 0;
			}
            catch (Exception ex)
            {
				WhoWeAre_TutorialListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.DynamicDataError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingWhoWeAre_TutorialListControlCollection = false;
			}
        }
		
		
        private bool _loadingWhoWeAre_TutorialListControlCollection;
		
        public bool LoadingWhoWeAre_TutorialListControlCollection
        {
            get { return _loadingWhoWeAre_TutorialListControlCollection; }
            set { SetProperty(ref _loadingWhoWeAre_TutorialListControlCollection, value); }
        }

        private ICommand _refreshWhoWeAre_TutorialListControlCollectionCommand;

        /// <summary>
        /// Gets the RefreshWhoWeAre_TutorialListControlCollectionCommand command.
        /// </summary>
        public ICommand RefreshWhoWeAre_TutorialListControlCollectionCommand
        {
            get { return _refreshWhoWeAre_TutorialListControlCollectionCommand = _refreshWhoWeAre_TutorialListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand(RefreshWhoWeAre_TutorialListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GetWhoWeAre_TutorialListControlCollectionCommand command.
        /// </summary>
        public  void GetWhoWeAre_TutorialListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				GetWhoWeAre_TutorialListControlCollectionData(pageNumber);
        }
		

        private ICommand _getWhoWeAre_TutorialListControlCollectionCommand;

        /// <summary>
        /// Gets the GetWhoWeAre_TutorialListControlCollectionCommand command.
        /// </summary>
        public ICommand GetWhoWeAre_TutorialListControlCollectionCommand
        {
            get { return _getWhoWeAre_TutorialListControlCollectionCommand = _getWhoWeAre_TutorialListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(GetWhoWeAre_TutorialListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the RefreshPhotoAlbum_TutorialPhotosListControlCollectionCommand command.
        /// </summary>
        public async void RefreshPhotoAlbum_TutorialPhotosListControlCollectionCommandDelegate() 
        {
			try
			{
				LoadingPhotoAlbum_TutorialPhotosListControlCollection = true;
				var items = await  _photoAlbum_PhotoAlbumCollection.Refresh();
				PhotoAlbum_TutorialPhotosListControlCollection = items;
				PhotoAlbum_TutorialPhotosListControlCollectionPageNumber = 0;
			}
            catch (Exception ex)
            {
				PhotoAlbum_TutorialPhotosListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.DynamicDataError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingPhotoAlbum_TutorialPhotosListControlCollection = false;
			}
        }
		
		
        private bool _loadingPhotoAlbum_TutorialPhotosListControlCollection;
		
        public bool LoadingPhotoAlbum_TutorialPhotosListControlCollection
        {
            get { return _loadingPhotoAlbum_TutorialPhotosListControlCollection; }
            set { SetProperty(ref _loadingPhotoAlbum_TutorialPhotosListControlCollection, value); }
        }

        private ICommand _refreshPhotoAlbum_TutorialPhotosListControlCollectionCommand;

        /// <summary>
        /// Gets the RefreshPhotoAlbum_TutorialPhotosListControlCollectionCommand command.
        /// </summary>
        public ICommand RefreshPhotoAlbum_TutorialPhotosListControlCollectionCommand
        {
            get { return _refreshPhotoAlbum_TutorialPhotosListControlCollectionCommand = _refreshPhotoAlbum_TutorialPhotosListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand(RefreshPhotoAlbum_TutorialPhotosListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the GetPhotoAlbum_TutorialPhotosListControlCollectionCommand command.
        /// </summary>
        public  void GetPhotoAlbum_TutorialPhotosListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				GetPhotoAlbum_TutorialPhotosListControlCollectionData(pageNumber);
        }
		

        private ICommand _getPhotoAlbum_TutorialPhotosListControlCollectionCommand;

        /// <summary>
        /// Gets the GetPhotoAlbum_TutorialPhotosListControlCollectionCommand command.
        /// </summary>
        public ICommand GetPhotoAlbum_TutorialPhotosListControlCollectionCommand
        {
            get { return _getPhotoAlbum_TutorialPhotosListControlCollectionCommand = _getPhotoAlbum_TutorialPhotosListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(GetPhotoAlbum_TutorialPhotosListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the Refreshmoments_AuthorListControlCollectionCommand command.
        /// </summary>
        public async void Refreshmoments_AuthorListControlCollectionCommandDelegate() 
        {
			try
			{
				LoadingMoments_AuthorListControlCollection = true;
				var items = await  _moments_momentsCollection.Refresh();
				Moments_AuthorListControlCollection = items;
				Moments_AuthorListControlCollectionPageNumber = 0;
			}
            catch (Exception ex)
            {
				Moments_AuthorListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.DynamicDataError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingMoments_AuthorListControlCollection = false;
			}
        }
		
		
        private bool _loadingMoments_AuthorListControlCollection;
		
        public bool LoadingMoments_AuthorListControlCollection
        {
            get { return _loadingMoments_AuthorListControlCollection; }
            set { SetProperty(ref _loadingMoments_AuthorListControlCollection, value); }
        }

        private ICommand _refreshmoments_AuthorListControlCollectionCommand;

        /// <summary>
        /// Gets the Refreshmoments_AuthorListControlCollectionCommand command.
        /// </summary>
        public ICommand Refreshmoments_AuthorListControlCollectionCommand
        {
            get { return _refreshmoments_AuthorListControlCollectionCommand = _refreshmoments_AuthorListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand(Refreshmoments_AuthorListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the Getmoments_AuthorListControlCollectionCommand command.
        /// </summary>
        public  void Getmoments_AuthorListControlCollectionCommandDelegate(int pageNumber= 0) 
        {
				Getmoments_AuthorListControlCollectionData(pageNumber);
        }
		

        private ICommand _getmoments_AuthorListControlCollectionCommand;

        /// <summary>
        /// Gets the Getmoments_AuthorListControlCollectionCommand command.
        /// </summary>
        public ICommand Getmoments_AuthorListControlCollectionCommand
        {
            get { return _getmoments_AuthorListControlCollectionCommand = _getmoments_AuthorListControlCollectionCommand ?? new ViewModelsBase.DelegateCommand<int>(Getmoments_AuthorListControlCollectionCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the SetLockScreenCommand command.
        /// </summary>
        public  void SetLockScreenCommandDelegate() 
        {
				_lockScreenService.SetLockScreen("LockScreen-0cbdc818-4e9b-47ad-a79a-334ef004984c.jpg");
        }
		

        private ICommand _setLockScreenCommand;

        /// <summary>
        /// Gets the SetLockScreenCommand command.
        /// </summary>
        public ICommand SetLockScreenCommand
        {
            get { return _setLockScreenCommand = _setLockScreenCommand ?? new ViewModelsBase.DelegateCommand(SetLockScreenCommandDelegate); }
        }

        /// <summary>
        /// Delegate method for the AboutCommand command.
        /// </summary>
        public  void AboutCommandDelegate() 
        {
				_navigationService.NavigateTo<IViewModels.IAboutViewModel>();
        }
		

        private ICommand _aboutCommand;

        /// <summary>
        /// Gets the AboutCommand command.
        /// </summary>
        public ICommand AboutCommand
        {
            get { return _aboutCommand = _aboutCommand ?? new ViewModelsBase.DelegateCommand(AboutCommandDelegate); }
        }

        private async void GetWhoWeAre_TutorialListControlCollectionData(int pageNumber = 0)
        {
	
			try
			{
				LoadingWhoWeAre_TutorialListControlCollection = true;
				WhoWeAre_TutorialListControlCollectionPageNumber = pageNumber;

                if (pageNumber == 0)
				{
					var items = await _whoWeAre_WhoWeAreCollection.GetData(pageNumber);
                    WhoWeAre_TutorialListControlCollection = items;
				}
                else   
				{
					var items = await _whoWeAre_WhoWeAreCollection.GetData(pageNumber);
                    foreach (var item in items)                    
                        WhoWeAre_TutorialListControlCollection.Add(item);
				}
			}
            catch (Exception ex)
            {
				WhoWeAre_TutorialListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.DynamicDataError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingWhoWeAre_TutorialListControlCollection = false;
			}
		}

        private async void GetPhotoAlbum_TutorialPhotosListControlCollectionData(int pageNumber = 0)
        {
	
			try
			{
				LoadingPhotoAlbum_TutorialPhotosListControlCollection = true;
				PhotoAlbum_TutorialPhotosListControlCollectionPageNumber = pageNumber;

                if (pageNumber == 0)
				{
					var items = await _photoAlbum_PhotoAlbumCollection.GetData(pageNumber);
                    PhotoAlbum_TutorialPhotosListControlCollection = items;
				}
                else   
				{
					var items = await _photoAlbum_PhotoAlbumCollection.GetData(pageNumber);
                    foreach (var item in items)                    
                        PhotoAlbum_TutorialPhotosListControlCollection.Add(item);
				}
			}
            catch (Exception ex)
            {
				PhotoAlbum_TutorialPhotosListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.DynamicDataError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingPhotoAlbum_TutorialPhotosListControlCollection = false;
			}
		}

        private async void Getmoments_AuthorListControlCollectionData(int pageNumber = 0)
        {
	
			try
			{
				LoadingMoments_AuthorListControlCollection = true;
				Moments_AuthorListControlCollectionPageNumber = pageNumber;

                if (pageNumber == 0)
				{
					var items = await _moments_momentsCollection.GetData(pageNumber);
                    Moments_AuthorListControlCollection = items;
				}
                else   
				{
					var items = await _moments_momentsCollection.GetData(pageNumber);
                    foreach (var item in items)                    
                        Moments_AuthorListControlCollection.Add(item);
				}
			}
            catch (Exception ex)
            {
				Moments_AuthorListControlCollection = null;
		
                Debug.WriteLine(ex.ToString());
                _dialogService.Show(Localization.AppResources.DynamicDataError + Environment.NewLine + Localization.AppResources.TryAgain);
            }
            finally
            {
				LoadingMoments_AuthorListControlCollection = false;
			}
		}
    }
}
